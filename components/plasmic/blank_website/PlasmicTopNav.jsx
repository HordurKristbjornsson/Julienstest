/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bw1XRvvtRawYwtZXSCfw3q
// Component: rsmGwQu4g3jB
import * as React from "react";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: bw1XRvvtRawYwtZXSCfw3q/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: bw1XRvvtRawYwtZXSCfw3q/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: bw1XRvvtRawYwtZXSCfw3q/projectcss
import sty from "./PlasmicTopNav.module.css"; // plasmic-import: rsmGwQu4g3jB/css
import MenuIcon from "./icons/PlasmicIcon__Menu"; // plasmic-import: WiE-dRrtM7Sy/icon
import ChevronDown2Icon from "./icons/PlasmicIcon__ChevronDown2"; // plasmic-import: ojct1-Ff4-oe/icon
import JuliensDefaultIcon from "./icons/PlasmicIcon__JuliensDefault"; // plasmic-import: WmXSus6hVYHz/icon
import DividerIcon from "./icons/PlasmicIcon__Divider"; // plasmic-import: YFZQoddBhyxS/icon
import Plus2Icon from "./icons/PlasmicIcon__Plus2"; // plasmic-import: K-GDMnASN78D/icon
import GroupIcon from "./icons/PlasmicIcon__Group"; // plasmic-import: BwIUOclJmEzq/icon
import LoveIcon from "./icons/PlasmicIcon__Love"; // plasmic-import: ymEcoNmpLzwr/icon
import BellIcon from "./icons/PlasmicIcon__Bell"; // plasmic-import: 36qdzzsizacu/icon

createPlasmicElementProxy;

export const PlasmicTopNav__VariantProps = new Array();

export const PlasmicTopNav__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTopNav__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  return (
    <div
      data-plasmic-name={"topNav"}
      data-plasmic-override={overrides.topNav}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.topNav
      )}
    >
      <div
        data-plasmic-name={"navDefault"}
        data-plasmic-override={overrides.navDefault}
        className={classNames(projectcss.all, sty.navDefault)}
      >
        {(hasVariant(globalVariants, "mobile", "mobileOnly") ? true : false) ? (
          <div
            data-plasmic-name={"button"}
            data-plasmic-override={overrides.button}
            className={classNames(projectcss.all, sty.button)}
          >
            <MenuIcon
              className={classNames(projectcss.all, sty.svg__edQ4K)}
              role={"img"}
            />

            {false ? (
              <div
                data-plasmic-name={"text"}
                data-plasmic-override={overrides.text}
                className={classNames(projectcss.all, sty.text)}
              >
                <div
                  data-plasmic-name={"button2"}
                  data-plasmic-override={overrides.button2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button2
                  )}
                >
                  {"Buy"}
                </div>
                <div
                  data-plasmic-name={"button3"}
                  data-plasmic-override={overrides.button3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button3
                  )}
                >
                  {"Buy"}
                </div>
              </div>
            ) : null}
            {false ? (
              <ChevronDown2Icon
                className={classNames(projectcss.all, sty.svg__w3Rax)}
                role={"img"}
              />
            ) : null}
          </div>
        ) : null}
        <div
          data-plasmic-name={"home"}
          data-plasmic-override={overrides.home}
          className={classNames(projectcss.all, sty.home)}
        >
          <JuliensDefaultIcon
            className={classNames(projectcss.all, sty.svg__oUrgi)}
            role={"img"}
          />
        </div>
        <DividerIcon
          className={classNames(projectcss.all, sty.svg__sqgQn)}
          role={"img"}
        />

        <div
          data-plasmic-name={"ctAs"}
          data-plasmic-override={overrides.ctAs}
          className={classNames(projectcss.all, sty.ctAs)}
        >
          <div
            data-plasmic-name={"nav"}
            data-plasmic-override={overrides.nav}
            className={classNames(projectcss.all, sty.nav)}
          >
            <div
              data-plasmic-name={"button4"}
              data-plasmic-override={overrides.button4}
              className={classNames(projectcss.all, sty.button4)}
            >
              {false ? (
                <Plus2Icon
                  className={classNames(projectcss.all, sty.svg___1Fkgt)}
                  role={"img"}
                />
              ) : null}
              <div
                data-plasmic-name={"text2"}
                data-plasmic-override={overrides.text2}
                className={classNames(projectcss.all, sty.text2)}
              >
                <div
                  data-plasmic-name={"button5"}
                  data-plasmic-override={overrides.button5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button5
                  )}
                >
                  {"Auctions"}
                </div>
                <div
                  data-plasmic-name={"button6"}
                  data-plasmic-override={overrides.button6}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button6
                  )}
                >
                  {"Auctions"}
                </div>
              </div>
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg__hFh4N)}
                  role={"img"}
                />
              ) : null}
            </div>
            <div
              data-plasmic-name={"button7"}
              data-plasmic-override={overrides.button7}
              className={classNames(projectcss.all, sty.button7)}
            >
              {false ? (
                <Plus2Icon
                  className={classNames(projectcss.all, sty.svg__kp3Dl)}
                  role={"img"}
                />
              ) : null}
              <div
                data-plasmic-name={"text3"}
                data-plasmic-override={overrides.text3}
                className={classNames(projectcss.all, sty.text3)}
              >
                <div
                  data-plasmic-name={"button8"}
                  data-plasmic-override={overrides.button8}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button8
                  )}
                >
                  {"Sell"}
                </div>
                <div
                  data-plasmic-name={"button9"}
                  data-plasmic-override={overrides.button9}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button9
                  )}
                >
                  {"Sell"}
                </div>
              </div>
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg__bxrr7)}
                  role={"img"}
                />
              ) : null}
            </div>
            <div
              data-plasmic-name={"button10"}
              data-plasmic-override={overrides.button10}
              className={classNames(projectcss.all, sty.button10)}
            >
              {false ? (
                <Plus2Icon
                  className={classNames(projectcss.all, sty.svg__jAh3)}
                  role={"img"}
                />
              ) : null}
              <div
                data-plasmic-name={"text4"}
                data-plasmic-override={overrides.text4}
                className={classNames(projectcss.all, sty.text4)}
              >
                <div
                  data-plasmic-name={"button11"}
                  data-plasmic-override={overrides.button11}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button11
                  )}
                >
                  {"Discover"}
                </div>
                <div
                  data-plasmic-name={"button12"}
                  data-plasmic-override={overrides.button12}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button12
                  )}
                >
                  {"Discover"}
                </div>
              </div>
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg__dPr06)}
                  role={"img"}
                />
              ) : null}
            </div>
            <div
              data-plasmic-name={"button13"}
              data-plasmic-override={overrides.button13}
              className={classNames(projectcss.all, sty.button13)}
            >
              {false ? (
                <Plus2Icon
                  className={classNames(projectcss.all, sty.svg__lvVh3)}
                  role={"img"}
                />
              ) : null}
              <div
                data-plasmic-name={"text5"}
                data-plasmic-override={overrides.text5}
                className={classNames(projectcss.all, sty.text5)}
              >
                <div
                  data-plasmic-name={"button14"}
                  data-plasmic-override={overrides.button14}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button14
                  )}
                >
                  {"Store"}
                </div>
                <div
                  data-plasmic-name={"button15"}
                  data-plasmic-override={overrides.button15}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button15
                  )}
                >
                  {"Store"}
                </div>
              </div>
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg___7P3Hx)}
                  role={"img"}
                />
              ) : null}
            </div>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__g4Rqh)}>
          <div
            data-plasmic-name={"search"}
            data-plasmic-override={overrides.search}
            className={classNames(projectcss.all, sty.search)}
          >
            <div
              data-plasmic-name={"searchBar"}
              data-plasmic-override={overrides.searchBar}
              className={classNames(projectcss.all, sty.searchBar)}
            >
              <div
                data-plasmic-name={"searchField"}
                data-plasmic-override={overrides.searchField}
                className={classNames(projectcss.all, sty.searchField)}
              >
                <PlasmicImg__
                  data-plasmic-name={"img"}
                  data-plasmic-override={overrides.img}
                  alt={""}
                  className={classNames(sty.img)}
                  displayHeight={"20px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "mobile", "mobileOnly")
                      ? "none"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"20px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website/images/search.svg",
                    fullWidth: 20,
                    fullHeight: 20,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cqAsz
                  )}
                >
                  {"Search Auction, Lots, Articles..."}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__zJv2Q)}>
                  {false ? (
                    <div
                      data-plasmic-name={"frame10451"}
                      data-plasmic-override={overrides.frame10451}
                      className={classNames(projectcss.all, sty.frame10451)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__w3XVu
                        )}
                      >
                        <div
                          data-plasmic-name={"remixIconsLineSystemCloseLine"}
                          data-plasmic-override={
                            overrides.remixIconsLineSystemCloseLine
                          }
                          className={classNames(
                            projectcss.all,
                            sty.remixIconsLineSystemCloseLine
                          )}
                        >
                          <GroupIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vkfIk
                            )}
                            role={"img"}
                          />
                        </div>
                      </div>
                    </div>
                  ) : null}
                </div>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"more"}
            data-plasmic-override={overrides.more}
            className={classNames(projectcss.all, sty.more)}
          >
            <div
              data-plasmic-name={"button16"}
              data-plasmic-override={overrides.button16}
              className={classNames(projectcss.all, sty.button16)}
            >
              {false ? (
                <Plus2Icon
                  className={classNames(projectcss.all, sty.svg__lq8J)}
                  role={"img"}
                />
              ) : null}
              <div
                data-plasmic-name={"text6"}
                data-plasmic-override={overrides.text6}
                className={classNames(projectcss.all, sty.text6)}
              >
                <div
                  data-plasmic-name={"button17"}
                  data-plasmic-override={overrides.button17}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button17
                  )}
                >
                  {"English"}
                </div>
                <div
                  data-plasmic-name={"button18"}
                  data-plasmic-override={overrides.button18}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button18
                  )}
                >
                  {"English"}
                </div>
              </div>
              <ChevronDown2Icon
                className={classNames(projectcss.all, sty.svg__p5DN5)}
                role={"img"}
              />
            </div>
            <div
              data-plasmic-name={"button19"}
              data-plasmic-override={overrides.button19}
              className={classNames(projectcss.all, sty.button19)}
            >
              {false ? (
                <Plus2Icon
                  className={classNames(projectcss.all, sty.svg__ao2Ff)}
                  role={"img"}
                />
              ) : null}
              <div
                data-plasmic-name={"text7"}
                data-plasmic-override={overrides.text7}
                className={classNames(projectcss.all, sty.text7)}
              >
                <div
                  data-plasmic-name={"button20"}
                  data-plasmic-override={overrides.button20}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button20
                  )}
                >
                  {"How to bid?"}
                </div>
                <div
                  data-plasmic-name={"button21"}
                  data-plasmic-override={overrides.button21}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button21
                  )}
                >
                  {"How to bid?"}
                </div>
              </div>
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg__yfq)}
                  role={"img"}
                />
              ) : null}
            </div>
            <DividerIcon
              className={classNames(projectcss.all, sty.svg__gMxox)}
              role={"img"}
            />

            <div
              data-plasmic-name={"notifications"}
              data-plasmic-override={overrides.notifications}
              className={classNames(projectcss.all, sty.notifications)}
            >
              <LoveIcon
                className={classNames(projectcss.all, sty.svg__fCMcH)}
                role={"img"}
              />

              {false ? (
                <div
                  data-plasmic-name={"text8"}
                  data-plasmic-override={overrides.text8}
                  className={classNames(projectcss.all, sty.text8)}
                >
                  <div
                    data-plasmic-name={"button22"}
                    data-plasmic-override={overrides.button22}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.button22
                    )}
                  >
                    {"Log in"}
                  </div>
                  <div
                    data-plasmic-name={"button23"}
                    data-plasmic-override={overrides.button23}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.button23
                    )}
                  >
                    {"Log in"}
                  </div>
                </div>
              ) : null}
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg__sweL0)}
                  role={"img"}
                />
              ) : null}
            </div>
            <div
              data-plasmic-name={"notifications2"}
              data-plasmic-override={overrides.notifications2}
              className={classNames(projectcss.all, sty.notifications2)}
            >
              <div
                data-plasmic-name={"notification"}
                data-plasmic-override={overrides.notification}
                className={classNames(projectcss.all, sty.notification)}
              >
                <BellIcon
                  className={classNames(projectcss.all, sty.svg__uIukz)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"frame10963"}
                  data-plasmic-override={overrides.frame10963}
                  className={classNames(projectcss.all, sty.frame10963)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gkyWw
                    )}
                  >
                    {"12"}
                  </div>
                </div>
              </div>
              {false ? (
                <div
                  data-plasmic-name={"text9"}
                  data-plasmic-override={overrides.text9}
                  className={classNames(projectcss.all, sty.text9)}
                >
                  <div
                    data-plasmic-name={"button24"}
                    data-plasmic-override={overrides.button24}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.button24
                    )}
                  >
                    {"Log in"}
                  </div>
                  <div
                    data-plasmic-name={"button25"}
                    data-plasmic-override={overrides.button25}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.button25
                    )}
                  >
                    {"Log in"}
                  </div>
                </div>
              ) : null}
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg__tVpqn)}
                  role={"img"}
                />
              ) : null}
            </div>
            <div
              data-plasmic-name={"button26"}
              data-plasmic-override={overrides.button26}
              className={classNames(projectcss.all, sty.button26)}
            >
              {false ? (
                <Plus2Icon
                  className={classNames(projectcss.all, sty.svg___0Eh3)}
                  role={"img"}
                />
              ) : null}
              <div
                data-plasmic-name={"text10"}
                data-plasmic-override={overrides.text10}
                className={classNames(projectcss.all, sty.text10)}
              >
                <div
                  data-plasmic-name={"button27"}
                  data-plasmic-override={overrides.button27}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button27
                  )}
                >
                  {"Log in"}
                </div>
                <div
                  data-plasmic-name={"button28"}
                  data-plasmic-override={overrides.button28}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.button28
                  )}
                >
                  {"Log in"}
                </div>
              </div>
              {false ? (
                <ChevronDown2Icon
                  className={classNames(projectcss.all, sty.svg__jjpP9)}
                  role={"img"}
                />
              ) : null}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  topNav: [
    "topNav",
    "navDefault",
    "button",
    "text",
    "button2",
    "button3",
    "home",
    "ctAs",
    "nav",
    "button4",
    "text2",
    "button5",
    "button6",
    "button7",
    "text3",
    "button8",
    "button9",
    "button10",
    "text4",
    "button11",
    "button12",
    "button13",
    "text5",
    "button14",
    "button15",
    "search",
    "searchBar",
    "searchField",
    "img",
    "frame10451",
    "remixIconsLineSystemCloseLine",
    "more",
    "button16",
    "text6",
    "button17",
    "button18",
    "button19",
    "text7",
    "button20",
    "button21",
    "notifications",
    "text8",
    "button22",
    "button23",
    "notifications2",
    "notification",
    "frame10963",
    "text9",
    "button24",
    "button25",
    "button26",
    "text10",
    "button27",
    "button28"
  ],

  navDefault: [
    "navDefault",
    "button",
    "text",
    "button2",
    "button3",
    "home",
    "ctAs",
    "nav",
    "button4",
    "text2",
    "button5",
    "button6",
    "button7",
    "text3",
    "button8",
    "button9",
    "button10",
    "text4",
    "button11",
    "button12",
    "button13",
    "text5",
    "button14",
    "button15",
    "search",
    "searchBar",
    "searchField",
    "img",
    "frame10451",
    "remixIconsLineSystemCloseLine",
    "more",
    "button16",
    "text6",
    "button17",
    "button18",
    "button19",
    "text7",
    "button20",
    "button21",
    "notifications",
    "text8",
    "button22",
    "button23",
    "notifications2",
    "notification",
    "frame10963",
    "text9",
    "button24",
    "button25",
    "button26",
    "text10",
    "button27",
    "button28"
  ],

  button: ["button", "text", "button2", "button3"],
  text: ["text", "button2", "button3"],
  button2: ["button2"],
  button3: ["button3"],
  home: ["home"],
  ctAs: [
    "ctAs",
    "nav",
    "button4",
    "text2",
    "button5",
    "button6",
    "button7",
    "text3",
    "button8",
    "button9",
    "button10",
    "text4",
    "button11",
    "button12",
    "button13",
    "text5",
    "button14",
    "button15"
  ],

  nav: [
    "nav",
    "button4",
    "text2",
    "button5",
    "button6",
    "button7",
    "text3",
    "button8",
    "button9",
    "button10",
    "text4",
    "button11",
    "button12",
    "button13",
    "text5",
    "button14",
    "button15"
  ],

  button4: ["button4", "text2", "button5", "button6"],
  text2: ["text2", "button5", "button6"],
  button5: ["button5"],
  button6: ["button6"],
  button7: ["button7", "text3", "button8", "button9"],
  text3: ["text3", "button8", "button9"],
  button8: ["button8"],
  button9: ["button9"],
  button10: ["button10", "text4", "button11", "button12"],
  text4: ["text4", "button11", "button12"],
  button11: ["button11"],
  button12: ["button12"],
  button13: ["button13", "text5", "button14", "button15"],
  text5: ["text5", "button14", "button15"],
  button14: ["button14"],
  button15: ["button15"],
  search: [
    "search",
    "searchBar",
    "searchField",
    "img",
    "frame10451",
    "remixIconsLineSystemCloseLine"
  ],

  searchBar: [
    "searchBar",
    "searchField",
    "img",
    "frame10451",
    "remixIconsLineSystemCloseLine"
  ],

  searchField: [
    "searchField",
    "img",
    "frame10451",
    "remixIconsLineSystemCloseLine"
  ],

  img: ["img"],
  frame10451: ["frame10451", "remixIconsLineSystemCloseLine"],
  remixIconsLineSystemCloseLine: ["remixIconsLineSystemCloseLine"],
  more: [
    "more",
    "button16",
    "text6",
    "button17",
    "button18",
    "button19",
    "text7",
    "button20",
    "button21",
    "notifications",
    "text8",
    "button22",
    "button23",
    "notifications2",
    "notification",
    "frame10963",
    "text9",
    "button24",
    "button25",
    "button26",
    "text10",
    "button27",
    "button28"
  ],

  button16: ["button16", "text6", "button17", "button18"],
  text6: ["text6", "button17", "button18"],
  button17: ["button17"],
  button18: ["button18"],
  button19: ["button19", "text7", "button20", "button21"],
  text7: ["text7", "button20", "button21"],
  button20: ["button20"],
  button21: ["button21"],
  notifications: ["notifications", "text8", "button22", "button23"],
  text8: ["text8", "button22", "button23"],
  button22: ["button22"],
  button23: ["button23"],
  notifications2: [
    "notifications2",
    "notification",
    "frame10963",
    "text9",
    "button24",
    "button25"
  ],

  notification: ["notification", "frame10963"],
  frame10963: ["frame10963"],
  text9: ["text9", "button24", "button25"],
  button24: ["button24"],
  button25: ["button25"],
  button26: ["button26", "text10", "button27", "button28"],
  text10: ["text10", "button27", "button28"],
  button27: ["button27"],
  button28: ["button28"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTopNav__ArgProps,
          internalVariantPropNames: PlasmicTopNav__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTopNav__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "topNav") {
    func.displayName = "PlasmicTopNav";
  } else {
    func.displayName = `PlasmicTopNav.${nodeName}`;
  }
  return func;
}

export const PlasmicTopNav = Object.assign(
  // Top-level PlasmicTopNav renders the root element
  makeNodeComponent("topNav"),
  {
    // Helper components rendering sub-elements
    navDefault: makeNodeComponent("navDefault"),
    button: makeNodeComponent("button"),
    text: makeNodeComponent("text"),
    button2: makeNodeComponent("button2"),
    button3: makeNodeComponent("button3"),
    home: makeNodeComponent("home"),
    ctAs: makeNodeComponent("ctAs"),
    nav: makeNodeComponent("nav"),
    button4: makeNodeComponent("button4"),
    text2: makeNodeComponent("text2"),
    button5: makeNodeComponent("button5"),
    button6: makeNodeComponent("button6"),
    button7: makeNodeComponent("button7"),
    text3: makeNodeComponent("text3"),
    button8: makeNodeComponent("button8"),
    button9: makeNodeComponent("button9"),
    button10: makeNodeComponent("button10"),
    text4: makeNodeComponent("text4"),
    button11: makeNodeComponent("button11"),
    button12: makeNodeComponent("button12"),
    button13: makeNodeComponent("button13"),
    text5: makeNodeComponent("text5"),
    button14: makeNodeComponent("button14"),
    button15: makeNodeComponent("button15"),
    search: makeNodeComponent("search"),
    searchBar: makeNodeComponent("searchBar"),
    searchField: makeNodeComponent("searchField"),
    img: makeNodeComponent("img"),
    frame10451: makeNodeComponent("frame10451"),
    remixIconsLineSystemCloseLine: makeNodeComponent(
      "remixIconsLineSystemCloseLine"
    ),
    more: makeNodeComponent("more"),
    button16: makeNodeComponent("button16"),
    text6: makeNodeComponent("text6"),
    button17: makeNodeComponent("button17"),
    button18: makeNodeComponent("button18"),
    button19: makeNodeComponent("button19"),
    text7: makeNodeComponent("text7"),
    button20: makeNodeComponent("button20"),
    button21: makeNodeComponent("button21"),
    notifications: makeNodeComponent("notifications"),
    text8: makeNodeComponent("text8"),
    button22: makeNodeComponent("button22"),
    button23: makeNodeComponent("button23"),
    notifications2: makeNodeComponent("notifications2"),
    notification: makeNodeComponent("notification"),
    frame10963: makeNodeComponent("frame10963"),
    text9: makeNodeComponent("text9"),
    button24: makeNodeComponent("button24"),
    button25: makeNodeComponent("button25"),
    button26: makeNodeComponent("button26"),
    text10: makeNodeComponent("text10"),
    button27: makeNodeComponent("button27"),
    button28: makeNodeComponent("button28"),
    // Metadata about props expected for PlasmicTopNav
    internalVariantProps: PlasmicTopNav__VariantProps,
    internalArgProps: PlasmicTopNav__ArgProps
  }
);

export default PlasmicTopNav;
/* prettier-ignore-end */
